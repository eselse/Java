Вопросы и ответы
Глава 1. Основы Java
	1. Что такое байт-код и почему он так важен для интернет-программирования
	   на языке Java?

	 1. Байт-код - это высокооптимизированный набор инструкций, выполняемых под
	    управлением виртуальной машины Java. Использование байт-кода помогает
	    улучшить характеристики переносимости и безопасности программ на Java.

	2. Каковы три ключевых принципа объектно-ориентированного программирования?

	 2. Инкапсуляция, полиморфизм и наследование.

	3. С чего начинается выполнение программы на Java?

	 3. Выполнение программы на Java начинается с вызова метода main().

	4. Что такое переменная?

	 4. Переменная - это именованная область памяти. Содержимое переменной может
	 	изменяться в процессе выполнения программы.

	5. Какое из перечисленных ниже имен переменных недопустимо?
		А. count 
		Б. $count
		В. count27
		Г. 67count

	 5. Недопустимо имя 67count (пункт Г). Имя переменной не должно
	 	начинаться с цифры. 

	6. Как создаются однострочный и многострочный комментарии?

	 6. Однострочные комментарии должны начинаться с символов //. В этом случае
	 	комментариями считаются эти и все последующие символы до конца строки.
	 	Многострочные комментарии должны начинаться символами /* и заканчиваться
	 	символами */

	7. Как выглядит общая форма условного оператора if? Как выглядит общая форма
	   цикла for?

	 7. Общая форма оператора if выглядит следующим образом:
	 	if (условие) оператор;
	 	Общая форма цикла for имеет следующий вид:
	 	for(инициализация; условие; итерация) оператор;

	8. Как создать блок кода?

	 8. Блок кода должен начинаться с символа { и закоанчиваться символом }.

	9. Сила тяжести на Луне составляет около 17% земной. Напишите программу, которая
	   вычисляла бы ваш вес на Луне.

	 9. /*
	 		Вычисление веса на Луне.

	 		Присвоить этому файлу имя Moon.java
	 	*/
	 	class Moon {
	 		public static void main(String args[]) {
	 			double earthweight; // вес на Земле
	 			double moonweight; // вес на Луне

	 			earthweight = 165; // значение веса на Земле в фунтах

	 			moonweight = earthweight * 0.17;

	 			System.out.println(earthweight + 
	 								" земных фунтов эквивалентны " +
	 								moonweight + " лунных фунтов.");
	 		}
	 	}

	10. Видоизмените программу, созданную в упражнении 1.2, таким образом, чтобы
		она выводила таблицу перевода дюймов в метры. Выведите значения длины до
		12 футов через каждый дюйм. После каждых 12 дюймов выведите пустую строку.
		(Один метр приблизительно равен 39,37 дюйма.)

	 10. /*
	 	 	Эта программа отображает таблицу пребразования дюймов в метры.

	 	 	Присвойте этому файлу имя InchToMeterTable.java
	 	 */
	 	 class InchToMeterTable {
	 	 	public static void main(String args[]) {
	 	 		double inches, meters;
	 	 		int counter;

	 	 		counter = 0;
	 	 		for(inches = 1; inches <= 144; inches++) {
	 	 			meters = inches / 39.37; // преобразовать в метры
	 	 			System.out.println(inches + " дюймов равно " +
	 	 								meters + " метров");
	 	 			counter++;
	 	 			if(counter == 12) {
	 	 				System.out.println();
	 	 				counter = 0; // сбросить счетчик строк
	 	 			}
	 	 		}
	 	 	}
	 	 }

	11. Если при вводе кода программы вы допустите опечатку, то какого рода сообщение
		об ошибке получите?

	12. Имеет ли значение, с какой именно позиции в строке начинается инструкция?

