Вопросы и ответы
Глава 4. Введение в классы, объекты и методы

    1. Чем отличается класс от объекта?

     1. Класс - это абстрактное логическое описание формы и поведения объекта,
     	тогда как объект - это вещественный экземпляр класса.

    2. Как определяется класс?

   	 2. Класс определяется с помощью ключевого слова class. В операторе class
   	 	указываются код и данные, составляющие класс.

   	3. Чью собственную копию содержит каждый объект?

   	 3. Каждый объект класса содержит собственную копию переменных экземпляра
   	 	этого класса.

   	4. Покажите, как объявить объект counter класса MyCounter, используя два
   	   отдельных оператора.

   	 4. MyCounter counter;
   	 	counter = new MyCounter();

   	5. Как должен быть объявлен метод myMeth, принимающий два параметра,
   	   a и b, типа int и возвращающий значение типа double?

   	 5. double myMeth(int a, int b) { //...}

   	6. Как должно завершаться выполнение метода, возвращающего некоторое
   	   значение?

   	 6. Для завершения метода служит оператор return. Он же передает
   	 	возвращаемое значение вызывающей части программы.

   	7. Каким должно быть имя конструктора?

   	 7. Имя конструктора должно совпадать с именем класса.

   	8. Какие действия выполняет оператор new?

   	 8. Оператор new выделяет память для объекта и выполняет его инициализацию,
   	 	используя конструктор.

   	9. Что такое сборка мусора и какие действия она выполняет? Когда
   	   вызывается метод finalize()?

   	 9. Сборка мусора - это механизм удаления неиспользуемых объектов для
   	 	повторного использования освобождаемой памяти. Метод finalize() вызывается
   	 	для объекта непосредственно перед удалением его из памяти.

   	10. Что означает ключевое слово this?

   	 10. Ключевое слово this означает ссылку на объект, для которого вызывается метод.
   	 	 Эта ссылка автоматически передается методу.

   	11. Может ли конструктор иметь один или несколько параметров?

   	 11. Да, может.

   	12. Если метод не возвращает значения, то как следует объявить тип этого
   	    метода?

   	 12. Как void.