Вопросы и ответы
Глава 3. Управляющие операторы

	1. Напишите программу, которая получает символы, введенные с клавиатуры, до
	   тех пор, пока не встретится точка. Предусмотрите в программе счетчик пробелов.
	   Сведения о количестве пробелов должны выводится в конце программы.

	 1. // Подсчет пробелов
	 	class Spaces {
	 		public static void main(String args[])
	 			throws java.io.IOException {
	 				
	 				char ch;
	 				int spaces = 0;

	 				System.out.println("Для остановки введите символ точки.")

	 				do{
	 					ch = (char) System.in.read();
	 					if(ch == ' ') spaces++;
	 				} while(ch != '.');
	 				System.out.println("Пробелов: " + spaces);
	 			}
	 	}

	2. Каков общий синтаксис многоступенчатой конструкции if-else-if?

	 2. if(условие)
	 		оператор;
	 	else if(условие)
	 		оператор;
	 	else if(условие)
	 		оператор;
	 	*
	 	*
	 	*
	 	else
	 		оператор;

	3. Допустим, имеется следующий фрагмент кода.

	   if(x < 10)
	   	if(y > 100) {
	   		if(!done) x = z;
	   		else y = z;
	   	}
	   	else System.out.println("error"); // к какому оператору if относится?

	 3. Последний оператор else соответствует ближайшему оператору if того же
	    уровня, т.е. if(y > 100).

	4. Напишите цикл for, в котором перебирались бы значения от 1000 до 0 с шагом
	   -2.

	 4. for(int i = 1000; i => 0; i -= 2) // ...

	5. Корректен ли следующий фрагмент кода?

	   for(int i = 0; i < num; i++)
	       sum += i;

	   count = i;

	 5. Нет, не корректен. Переменная i недоступна за пределами цикла for,
	    в котором она объявлена.

	6. Какие действия выполняет оператор break? Опишите оба варианта этого
	   оператора.

	 6. Оператор break без метки вызывает немедленное завершение текущего цикла
	    или выражения switch. Оператор break с меткой передает управление в конец
	    помеченного блока.

	7. Какое сообщение будет выведено после выполнения оператора break в
	   приведенном нриже фрагменте кода?

	   for(int i = 0; i < 10; i++) {
	       while(running) {
	           if(x < y) break;
	               // ...
	       }
	       System.out.println("После while");
	   }
	   System.out.println("После for");

	 7. После выполнения оператора break будет выведено сообщение "После while".

	8. Что будет выведено на экран в результате выполнения следующего фрагмента
	   кода?

	   for(int i = 0; i < 10; i++) {
	       System.out.print(i + " ");
	       if((i % 2) == 0) continue;
	       System.out.println();
	   }

	 8. На экране появится следующий результат:
	 	0 1
	 	2 3
	 	4 5
	 	6 7
	 	8 9

	9. Итерационное выражение для цикла for не обязательно должно изменять
	   значение переменной цикла на фиксированную величину. Эта переменная
	   может принимать произвольные значения. Напишите программу, использующую
	   цикл for для вывода чисел в геометрической прогрессии: 1, 2, 4, 8, 16, 32 и т.д.

	 9. /*
			Использование цикла for для формирования
			геометрической прогрессии 1, 2, 4, 8, 16, 32 и т.д.
		*/
		class Progress {
			public static void main(String args[]) {

				// for(int i = 1; i < 1025; i *= 2){
				// 	System.out.println(i);
				// }

				for(int i = 1; i < 1025; i += i){
					System.out.println(i);
				}

			}
		}

	10. Код ASCII символов нижнего регистра отличается от кода соответствующих
	    символов верхнего регистра на величину 32. Следовательно, для преобразования
	    строчной буквы в в прописную нужно уменьшить ее код на 32. Используйте это
	    обстоятельство для написания программы, осуществляющей получение символов 
	    с клавиатуры. При выводе результатов данная программв должна преобразовывать
	    строчные буквы в прописные, а прописные - в строчные. Остальные символы не
	    должны изменяться. Работа программы должна завершаться после того, как
	    пользователь введет с клавиатуры точку. И наконец, сделайте так, чтобы программа
	    отображала число символов, для которых был изменен регистр.

	 10. // Смена регистра символов
		class CaseCh {
			public static void main(String args[])
				throws java.io.IOException {

				char ch;
					int changes = 0;


					System.out.println("Для остановки введите символ точки.");

					do{
						ch = (char) System.in.read();
						if(ch >= 'a' & ch <= 'z') {
							ch -= 32;
							changes++;
							System.out.print(ch);
						}
						else if(ch >= 'A' & ch <= 'Z') {
							ch += 32;
							changes++;
							System.out.print(ch);
						}
					} while(ch != '.');
					System.out.println("Изменение регистра: " + changes);
				}
		}

	11. Что такое бесконечный цикл?

	 11. Бесконечным циклом называется цикл, выполнение которого никогда не прекращается.

	12. Должна ли метка, используемая вместе с оператором break, быть определена в
	    блоке кода, содержащем этот оператор?

	 12. Да, должна.
